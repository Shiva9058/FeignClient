package com.test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;

import org.junit.Before;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.test.web.servlet.MockMvc;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.test.controller.MyController;
import com.test.entity.User;
import com.test.service.UserService;

import ch.qos.logback.core.net.ObjectWriter;

 
@ExtendWith(MockitoExtension.class)
  public class GlobalExceptionHandlerApplicationTests {
	 private MockMvc mockMvc;
     ObjectMapper objectMapper=new ObjectMapper();
     ObjectWriter objectWriter=(ObjectWriter) objectMapper.writer();
//     @Mock
//     private UserRepo userRepo;
     @Mock
     private UserService userService;
     @InjectMocks
     private MyController myController;
     
     User user1=new User(10, "Shiv", "fr","245304");
     User user2=new User(12, "Ami", "Bihar","201203");
     User user3=new User(13, "Aru", "hyderabad","201204");
 
 
//     @Before(value = "for")
//     public void setup()
//     {
//    	 MockitoAnnotations.initMocks(testClass=this);
//    	 this.mockMvc=MockMvcBuilders.standaloneSetup(myController).build();
//     }
     @Before
     public void init() {
    	 MockitoAnnotations.initMocks(this);
     }
     
     @Test
     public void getAllUsers()
     {
    	 List<User> list=new ArrayList<User>();
    	 list.add(user1);
    	 list.add(user2);
    	 list.add(user3);
    	 when(userService.getAllUsers()).thenReturn(list);
    	 ArrayList<User> list2=(ArrayList<User>) myController.getAllUsers();
    	 assertEquals(3, list2.size());
    	 verify(userService,times(1)).getAllUsers();
    		}
    			
     
	/*@Test
	public void createUser()throws Exception
	{
		User user1=new User();
		  user1.setAddress("or");
		  user1.setId(17);
		  user1.setName("Saurav");
		  user1.setPincode("201201");
		  
	}*/
//	public static String asJsonString(final Object obj) {
//	    try {
//	        return new ObjectMapper().writeValueAsString(obj);
//	    } catch (Exception e) {
//	        throw new RuntimeException(e);
//	    }
//	}
}
